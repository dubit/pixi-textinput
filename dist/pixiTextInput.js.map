{"version":3,"file":"pixiTextInput.js","sources":["../src/input.js","../src/button.js"],"sourcesContent":["import * as PIXI from 'pixi.js'\r\n\r\n\r\nexport class TextInput extends PIXI.Container {\r\n\r\n    constructor (styles) {\r\n        super ();\r\n        this._input_style = Object.assign (\r\n            {\r\n                position : 'absolute',\r\n                background : 'none',\r\n                border : 'none',\r\n                outline : 'none',\r\n                transformOrigin : '0 0',\r\n                lineHeight : '1',\r\n                rows: 1,\r\n                display: 'none'\r\n            },\r\n            styles.input\r\n        );\r\n\r\n        if (styles.box) {\r\n            this._box_generator = typeof styles.box === 'function' ? styles.box : new DefaultBoxGenerator (styles.box)\r\n        } else {\r\n            this._box_generator = null;\r\n        }\r\n        if (this._input_style.hasOwnProperty ('multiline')) {\r\n            this._multiline = !!this._input_style.multiline;\r\n            delete this._input_style.multiline\r\n        } else {\r\n            this._multiline = false;\r\n        }\r\n\r\n        this._box_cache = {};\r\n        this._previous = {};\r\n        this._dom_added = false;\r\n        this._dom_visible = true;\r\n        this._placeholder = '';\r\n        this._placeholderColor = 0xa9a9a9;\r\n        this._selection = [0, 0];\r\n        this._restrict_value = '';\r\n        this._createDOMInput ();\r\n        this.substituteText = true;\r\n        this._setState ('DEFAULT');\r\n        this._addListeners ()\r\n    }\r\n\r\n\r\n    // GETTERS & SETTERS\r\n\r\n    get substituteText () {\r\n        return this._substituted\r\n    }\r\n\r\n    set substituteText (substitute) {\r\n        if (this._substituted == substitute)\r\n            return\r\n\r\n        this._substituted = substitute\r\n\r\n        if (substitute) {\r\n            this._createSurrogate ()\r\n            this._dom_visible = false\r\n        } else {\r\n            this._destroySurrogate ()\r\n            this._dom_visible = true\r\n        }\r\n        this.placeholder = this._placeholder\r\n        this._update ()\r\n    }\r\n\r\n    get placeholder () {\r\n        return this._placeholder\r\n    }\r\n\r\n    set placeholder (text) {\r\n        this._placeholder = text\r\n        if (this._substituted) {\r\n            this._updateSurrogate ()\r\n            this._dom_input.placeholder = ''\r\n        } else {\r\n            this._dom_input.placeholder = text\r\n        }\r\n    }\r\n\r\n    get disabled () {\r\n        return this._disabled\r\n    }\r\n\r\n    set disabled (disabled) {\r\n        this._disabled = disabled\r\n        this._dom_input.disabled = disabled\r\n        this._setState (disabled ? 'DISABLED' : 'DEFAULT')\r\n    }\r\n\r\n    get maxLength () {\r\n        return this._max_length\r\n    }\r\n\r\n    set maxLength (length) {\r\n        this._max_length = length\r\n        this._dom_input.setAttribute ('maxlength', length)\r\n    }\r\n\r\n    get restrict () {\r\n        return this._restrict_regex\r\n    }\r\n\r\n    set restrict (regex) {\r\n        if (regex instanceof RegExp) {\r\n            regex = regex.toString ().slice (1, -1)\r\n\r\n            if (regex.charAt (0) !== '^')\r\n                regex = '^' + regex\r\n\r\n            if (regex.charAt (regex.length - 1) !== '$')\r\n                regex = regex + '$'\r\n\r\n            regex = new RegExp (regex)\r\n        } else {\r\n            regex = new RegExp ('^[' + regex + ']*$')\r\n        }\r\n\r\n        this._restrict_regex = regex\r\n    }\r\n\r\n    get text () {\r\n        return this._dom_input.value\r\n    }\r\n\r\n    set text (text) {\r\n        this._dom_input.value = text\r\n        if (this._substituted) this._updateSurrogate ()\r\n    }\r\n\r\n    get htmlInput () {\r\n        return this._dom_input\r\n    }\r\n\r\n    focus () {\r\n        if (this._substituted && !this.dom_visible)\r\n            this._setDOMInputVisible (true)\r\n\r\n        this._dom_input.focus ()\r\n\r\n    }\r\n\r\n    blur () {\r\n        this._dom_input.blur ()\r\n    }\r\n\r\n    select () {\r\n        this.focus ()\r\n        this._dom_input.select ()\r\n    }\r\n\r\n    setInputStyle (key, value) {\r\n        this._input_style[key] = value\r\n        this._dom_input.style[key] = value\r\n\r\n        if (this._substituted && (key === 'fontFamily' || key === 'fontSize'))\r\n            this._updateFontMetrics ()\r\n\r\n        if (this._last_renderer)\r\n            this._update ()\r\n    }\r\n\r\n    destroy (options) {\r\n        if (this._dom_input) this._dom_input.remove();\r\n\r\n        this._destroyBoxCache ()\r\n        super.destroy (options)\r\n    }\r\n\r\n\r\n    // SETUP\r\n\r\n    _createDOMInput () {\r\n        if (this._multiline) {\r\n            this._dom_input = document.createElement ('textarea');\r\n            this._dom_input.style.resize = 'none';\r\n            this._dom_input.rows = this._input_style.rows;\r\n        } else {\r\n            this._dom_input = document.createElement ('input')\r\n            this._dom_input.type = 'text';\r\n            this._dom_input.spellcheck = 'true';\r\n        }\r\n\r\n        for (let key in this._input_style) {\r\n            this._dom_input.style[key] = this._input_style[key]\r\n        }\r\n    }\r\n\r\n    _addListeners () {\r\n        this.once ('added', this._onAdded.bind (this))\r\n        this.once ('removed', this._onRemoved.bind (this))\r\n        this._dom_input.addEventListener ('input', this._onInputInput.bind (this))\r\n        this._dom_input.addEventListener ('keyup', this._onInputKeyUp.bind (this))\r\n        this._dom_input.addEventListener ('focus', this._onFocused.bind (this))\r\n        this._dom_input.addEventListener ('blur', this._onBlurred.bind (this))\r\n    }\r\n\r\n    _onInputInput (e) {\r\n        if (this._substituted)\r\n            this._updateSubstitution ();\r\n\r\n        this.emit ('input', this.text);\r\n    }\r\n\r\n    _onInputKeyUp (e) {\r\n        this.emit ('keyup', e.keyCode)\r\n    }\r\n\r\n    _onFocused () {\r\n        this._setState ('FOCUSED')\r\n        this.emit ('focus')\r\n    }\r\n\r\n    _onBlurred () {\r\n        this._setState ('DEFAULT')\r\n        this.emit ('blur')\r\n    }\r\n\r\n    _onAdded () {\r\n        requestAnimationFrame(() => {\r\n            if (!this.parent) return;\r\n            document.body.appendChild(this._dom_input)\r\n            this._dom_input.style.display = 'none'\r\n            this._dom_added = true\r\n        });\r\n    }\r\n\r\n    _onRemoved () {\r\n        this._dom_input.remove();\r\n        this._dom_added = false\r\n    }\r\n\r\n    _setState (state) {\r\n        this.state = state\r\n        this._updateBox ()\r\n        if (this._substituted)\r\n            this._updateSubstitution ()\r\n    }\r\n\r\n\r\n    // RENDER & UPDATE\r\n\r\n    // for pixi v4\r\n    renderWebGL (renderer) {\r\n        super.renderWebGL (renderer)\r\n        this._renderInternal (renderer)\r\n    }\r\n\r\n    // for pixi v4\r\n    renderCanvas (renderer) {\r\n        super.renderCanvas (renderer)\r\n        this._renderInternal (renderer)\r\n    }\r\n\r\n    // for pixi v5\r\n    render (renderer) {\r\n        super.render (renderer)\r\n        this._renderInternal (renderer)\r\n    }\r\n\r\n    _renderInternal (renderer) {\r\n        this._resolution = renderer.resolution\r\n        this._last_renderer = renderer\r\n        this._canvas_bounds = this._getCanvasBounds ()\r\n        if (this._needsUpdate ())\r\n            this._update ()\r\n    }\r\n\r\n    _update () {\r\n        this._updateDOMInput ()\r\n        if (this._substituted) this._updateSurrogate ()\r\n        this._updateBox ()\r\n    }\r\n\r\n    _updateBox () {\r\n        if (!this._box_generator)\r\n            return\r\n\r\n        if (this._needsNewBoxCache ())\r\n            this._buildBoxCache ()\r\n\r\n        if (this.state == this._previous.state\r\n            && this._box == this._box_cache[this.state])\r\n            return\r\n\r\n        if (this._box)\r\n            this.removeChild (this._box)\r\n\r\n        this._box = this._box_cache[this.state]\r\n        this.addChildAt (this._box, 0)\r\n        this._previous.state = this.state\r\n    }\r\n\r\n    _updateSubstitution () {\r\n        if (this.state === 'FOCUSED') {\r\n            this._dom_visible = true\r\n            this._surrogate.visible = this.text.length === 0\r\n        } else {\r\n            this._dom_visible = false\r\n            this._surrogate.visible = true\r\n        }\r\n        this._updateDOMInput ()\r\n        this._updateSurrogate ()\r\n    }\r\n\r\n    _updateDOMInput () {\r\n        if (!this._canvas_bounds)\r\n            return\r\n\r\n        this._dom_input.style.top = this._canvas_bounds.top + 'px'\r\n        this._dom_input.style.left = this._canvas_bounds.left + 'px'\r\n        this._dom_input.style.transform = this._pixiMatrixToCSS (this._getDOMRelativeWorldTransform ())\r\n        this._dom_input.style.opacity = this.worldAlpha\r\n        this._setDOMInputVisible (this.worldVisible && this._dom_visible)\r\n\r\n        this._previous.canvas_bounds = this._canvas_bounds\r\n        this._previous.world_transform = this.worldTransform.clone ()\r\n        this._previous.world_alpha = this.worldAlpha\r\n        this._previous.world_visible = this.worldVisible\r\n    }\r\n\r\n    _applyRestriction () {\r\n        if (this._restrict_regex.test (this.text)) {\r\n            this._restrict_value = this.text\r\n        } else {\r\n            this.text = this._restrict_value\r\n            this._dom_input.setSelectionRange (\r\n                this._selection[0],\r\n                this._selection[1]\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // STATE COMPAIRSON (FOR PERFORMANCE BENEFITS)\r\n\r\n    _needsUpdate () {\r\n        return (\r\n            !this._comparePixiMatrices (this.worldTransform, this._previous.world_transform)\r\n            || !this._compareClientRects (this._canvas_bounds, this._previous.canvas_bounds)\r\n            || this.worldAlpha != this._previous.world_alpha\r\n            || this.worldVisible != this._previous.world_visible\r\n        )\r\n    }\r\n\r\n    _needsNewBoxCache () {\r\n        let input_bounds = this._getDOMInputBounds ()\r\n        return (\r\n            !this._previous.input_bounds\r\n            || input_bounds.width != this._previous.input_bounds.width\r\n            || input_bounds.height != this._previous.input_bounds.height\r\n        )\r\n    }\r\n\r\n\r\n    // INPUT SUBSTITUTION\r\n\r\n    _createSurrogate () {\r\n        this._surrogate_hitbox = new PIXI.Graphics ()\r\n        this._surrogate_hitbox.alpha = 0\r\n        this._surrogate_hitbox.interactive = true\r\n        this._surrogate_hitbox.cursor = 'text'\r\n        this._surrogate_hitbox.on ('pointerdown', this._onSurrogateFocus.bind (this))\r\n        this.addChild (this._surrogate_hitbox)\r\n\r\n        this._surrogate_mask = new PIXI.Graphics ()\r\n        this.addChild (this._surrogate_mask)\r\n\r\n        this._surrogate = new PIXI.Text ('', {})\r\n        this.addChild (this._surrogate)\r\n\r\n        this._surrogate.mask = this._surrogate_mask\r\n\r\n        this._updateFontMetrics ()\r\n        this._updateSurrogate ()\r\n    }\r\n\r\n    _updateSurrogate () {\r\n        let padding = this._deriveSurrogatePadding ()\r\n        let input_bounds = this._getDOMInputBounds ()\r\n\r\n        this._surrogate.style = this._deriveSurrogateStyle ()\r\n        this._surrogate.style.padding = Math.max.apply (Math, padding)\r\n        this._surrogate.y = this._multiline ? padding[0] : (input_bounds.height - this._surrogate.height) / 2\r\n        this._surrogate.x = padding[3]\r\n        this._surrogate.text = this._deriveSurrogateText ()\r\n\r\n        this._updateSurrogateHitbox (input_bounds)\r\n        this._updateSurrogateMask (input_bounds, padding)\r\n    }\r\n\r\n    _updateSurrogateHitbox (bounds) {\r\n        this._surrogate_hitbox.clear ()\r\n        this._surrogate_hitbox.beginFill (0)\r\n        this._surrogate_hitbox.drawRect (0, 0, bounds.width, bounds.height)\r\n        this._surrogate_hitbox.endFill ()\r\n        this._surrogate_hitbox.interactive = !this._disabled\r\n    }\r\n\r\n    _updateSurrogateMask (bounds, padding) {\r\n        this._surrogate_mask.clear ()\r\n        this._surrogate_mask.beginFill (0)\r\n        this._surrogate_mask.drawRect (padding[3], 0, bounds.width - padding[3] - padding[1], bounds.height)\r\n        this._surrogate_mask.endFill ()\r\n    }\r\n\r\n    _destroySurrogate () {\r\n        if (!this._surrogate) return\r\n\r\n        this.removeChild (this._surrogate)\r\n        this.removeChild (this._surrogate_hitbox)\r\n\r\n        this._surrogate.destroy ()\r\n        this._surrogate_hitbox.destroy ()\r\n\r\n        this._surrogate = null\r\n        this._surrogate_hitbox = null\r\n    }\r\n\r\n    _onSurrogateFocus () {\r\n        this._setDOMInputVisible (true)\r\n        //sometimes the input is not being focused by the mouseclick\r\n        setTimeout (this._ensureFocus.bind (this), 10)\r\n    }\r\n\r\n    _ensureFocus () {\r\n        if (!this._hasFocus ())\r\n            this.focus ()\r\n    }\r\n\r\n    _deriveSurrogateStyle () {\r\n        let style = new PIXI.TextStyle ()\r\n\r\n        for (var key in this._input_style) {\r\n            switch (key) {\r\n                case 'color':\r\n                    style.fill = this._input_style.color\r\n                    break\r\n                case 'fontFamily':\r\n                case 'fontSize':\r\n                case 'fontWeight':\r\n                case 'fontVariant':\r\n                case 'fontStyle':\r\n                    style[key] = this._input_style[key]\r\n                    break\r\n                case 'letterSpacing':\r\n                    style.letterSpacing = parseFloat (this._input_style.letterSpacing)\r\n                    break\r\n            }\r\n        }\r\n\r\n        if (this._multiline) {\r\n            style.lineHeight = parseFloat (style.fontSize)\r\n            style.wordWrap = true\r\n            style.wordWrapWidth = this._getDOMInputBounds ().width\r\n        }\r\n\r\n        if (this._dom_input.value.length === 0)\r\n            style.fill = this._placeholderColor\r\n\r\n        return style\r\n    }\r\n\r\n    _deriveSurrogatePadding () {\r\n        let indent = this._input_style.textIndent ? parseFloat (this._input_style.textIndent) : 0\r\n\r\n        if (this._input_style.padding && this._input_style.padding.length > 0) {\r\n            let components = this._input_style.padding.trim ().split (' ')\r\n\r\n            if (components.length == 1) {\r\n                let padding = parseFloat (components[0])\r\n                return [padding, padding, padding, padding + indent]\r\n            } else if (components.length == 2) {\r\n                let paddingV = parseFloat (components[0])\r\n                let paddingH = parseFloat (components[1])\r\n                return [paddingV, paddingH, paddingV, paddingH + indent]\r\n            } else if (components.length == 4) {\r\n                let padding = components.map (component => {\r\n                    return parseFloat (component)\r\n                })\r\n                padding[3] += indent\r\n                return padding\r\n            }\r\n        }\r\n\r\n        return [0, 0, 0, indent]\r\n    }\r\n\r\n    _deriveSurrogateText () {\r\n        return this._dom_input.value.length === 0 ? this._placeholder : this._dom_input.value\r\n    }\r\n\r\n    _updateFontMetrics () {\r\n        const style = this._deriveSurrogateStyle ()\r\n        const font = style.toFontString ()\r\n\r\n        this._font_metrics = PIXI.TextMetrics.measureFont (font)\r\n    }\r\n\r\n\r\n    // CACHING OF INPUT BOX GRAPHICS\r\n\r\n    _buildBoxCache () {\r\n        this._destroyBoxCache ()\r\n\r\n        let states = ['DEFAULT', 'FOCUSED', 'DISABLED']\r\n        let input_bounds = this._getDOMInputBounds ()\r\n\r\n        for (let i in states) {\r\n            this._box_cache[states[i]] = this._box_generator (\r\n                input_bounds.width,\r\n                input_bounds.height,\r\n                states[i]\r\n            )\r\n        }\r\n\r\n        this._previous.input_bounds = input_bounds\r\n    }\r\n\r\n    _destroyBoxCache () {\r\n        if (this._box) {\r\n            this.removeChild (this._box)\r\n            this._box = null\r\n        }\r\n\r\n        for (let i in this._box_cache) {\r\n            this._box_cache[i].destroy ()\r\n            this._box_cache[i] = null\r\n            delete this._box_cache[i]\r\n        }\r\n    }\r\n\r\n\r\n    // HELPER FUNCTIONS\r\n\r\n    _hasFocus () {\r\n        return document.activeElement === this._dom_input\r\n    }\r\n\r\n    _setDOMInputVisible (visible) {\r\n        this._dom_input.style.display = visible ? 'block' : 'none'\r\n    }\r\n\r\n    _getCanvasBounds () {\r\n        let rect = this._last_renderer.view.getBoundingClientRect ()\r\n        let bounds = { top : rect.top, left : rect.left, width : rect.width, height : rect.height }\r\n        bounds.left += window.scrollX\r\n        bounds.top += window.scrollY\r\n        return bounds\r\n    }\r\n\r\n    _getDOMInputBounds () {\r\n        let remove_after = false\r\n\r\n        if (!this._dom_added) {\r\n            document.body.appendChild (this._dom_input)\r\n            remove_after = true\r\n        }\r\n\r\n        let org_transform = this._dom_input.style.transform\r\n        let org_display = this._dom_input.style.display\r\n        this._dom_input.style.transform = ''\r\n        this._dom_input.style.display = 'inline-block'\r\n        let bounds = this._dom_input.getBoundingClientRect ()\r\n        this._dom_input.style.transform = org_transform\r\n        this._dom_input.style.display = org_display\r\n\r\n        if (remove_after)\r\n            document.body.removeChild (this._dom_input)\r\n\r\n        return bounds\r\n    }\r\n\r\n    _getDOMRelativeWorldTransform () {\r\n        let canvas_bounds = this._last_renderer.view.getBoundingClientRect ()\r\n        let matrix = this.worldTransform.clone ()\r\n\r\n        matrix.scale (this._resolution, this._resolution)\r\n        matrix.scale (canvas_bounds.width / this._last_renderer.width,\r\n            canvas_bounds.height / this._last_renderer.height)\r\n        return matrix\r\n    }\r\n\r\n    _pixiMatrixToCSS (m) {\r\n        return 'matrix(' + [m.a, m.b, m.c, m.d, m.tx, m.ty].join (',') + ')'\r\n    }\r\n\r\n    _comparePixiMatrices (m1, m2) {\r\n        if (!m1 || !m2) return false\r\n        return (\r\n            m1.a == m2.a\r\n            && m1.b == m2.b\r\n            && m1.c == m2.c\r\n            && m1.d == m2.d\r\n            && m1.tx == m2.tx\r\n            && m1.ty == m2.ty\r\n        )\r\n    }\r\n\r\n    _compareClientRects (r1, r2) {\r\n        if (!r1 || !r2) return false\r\n        return (\r\n            r1.left == r2.left\r\n            && r1.top == r2.top\r\n            && r1.width == r2.width\r\n            && r1.height == r2.height\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction DefaultBoxGenerator (styles) {\r\n    styles = styles || { fill : 0xcccccc }\r\n\r\n    if (styles.default) {\r\n        styles.focused = styles.focused || styles.default\r\n        styles.disabled = styles.disabled || styles.default\r\n    } else {\r\n        let temp_styles = styles\r\n        styles = {}\r\n        styles.default = styles.focused = styles.disabled = temp_styles\r\n    }\r\n\r\n    return function (w, h, state) {\r\n        let style = styles[state.toLowerCase ()]\r\n        let box = new PIXI.Graphics ()\r\n\r\n        if (style.fill)\r\n            box.beginFill (style.fill)\r\n\r\n        if (style.stroke)\r\n            box.lineStyle (\r\n                style.stroke.width || 1,\r\n                style.stroke.color || 0,\r\n                style.stroke.alpha || 1\r\n            )\r\n\r\n        if (style.rounded)\r\n            box.drawRoundedRect (0, 0, w, h, style.rounded)\r\n        else\r\n            box.drawRect (0, 0, w, h)\r\n\r\n        box.endFill ()\r\n        box.closePath ()\r\n\r\n        return box\r\n    }\r\n}\r\n","import { Sprite, utils } from 'pixi.js'\r\n\r\n/**\r\n * An UI button object\r\n *\r\n * @class\r\n * @extends PIXI.utils.EventEmitter\r\n */\r\n\r\nexport class ButtonTexture extends utils.EventEmitter {\r\n    constructor (options) {\r\n        super (options);\r\n        this._options = options;\r\n        const _btn = new Sprite (options.textureButton);\r\n        _btn._btnMode = true;\r\n        _btn.anchor.set (options.anchor ? options.anchor : 0.5);\r\n        _btn.position.x = options.x;\r\n        _btn.position.y = options.y;\r\n        _btn.interactive = true;\r\n        _btn\r\n        // set the mousedown and touchstart callback...\r\n            .on ('mousedown', this.onButtonDown)\r\n            .on ('touchstart', this.onButtonDown)\r\n            // set the mouseup and touchend callback...\r\n            .on ('mouseup', this.onButtonUp)\r\n            .on ('touchend', this.onButtonUp)\r\n            .on ('mouseupoutside', this.onButtonUp)\r\n            .on ('touchendoutside', this.onButtonUp)\r\n            // set the mouseover callback...\r\n            .on ('mouseover', this.onButtonOver)\r\n            // set the mouseout callback...\r\n            .on ('mouseout', this.onButtonOut)\r\n        //  .on ('tap', this.onButtonDown)\r\n        //  .on ('click', this.onButtonDown)\r\n\r\n        this.button = _btn;\r\n    }\r\n\r\n    getButtonFace () {\r\n        return this.button;\r\n    }\r\n\r\n    onButtonDown () {\r\n        this.button.isdown = true;\r\n        this.emit (\"BUTTONDOWN\");\r\n        this.button.texture = this._options.textureButtonDown;\r\n        this.button.alpha = 1;\r\n        window.console.log (\"button down\")\r\n    }\r\n\r\n\r\n    onButtonUp () {\r\n        this.button.isdown = false;\r\n        if (this.button.isOver) {\r\n            this.emit (\"BUTTONCONFIRM\");\r\n            this.button.texture = this._options.textureButtonOver;\r\n        } else {\r\n            this.emit (\"BUTTONUP\");\r\n            this.button.texture = this._options.textureButton;\r\n        }\r\n        window.console.log (\"button up\")\r\n    }\r\n\r\n    onButtonOver () {\r\n        this.button.isOver = true;\r\n        this.emit (\"BUTTONOVER\");\r\n        if (this.button.isdown) {\r\n            return;\r\n        }\r\n        this.button.texture = this._options.textureButtonOver;\r\n    }\r\n\r\n    onButtonOut () {\r\n        this.button.isOver = false;\r\n        this.emit (\"BUTTONOUT\");\r\n        if (this.button.isdown) {\r\n            return;\r\n        }\r\n        this.button.texture = this._options.textureButton;\r\n    }\r\n\r\n}\r\n"],"names":["TextInput","PIXI.Container","[object Object]","styles","super","this","_input_style","Object","assign","position","background","border","outline","transformOrigin","lineHeight","rows","display","input","box","_box_generator","DefaultBoxGenerator","hasOwnProperty","_multiline","multiline","_box_cache","_previous","_dom_added","_dom_visible","_placeholder","_placeholderColor","_selection","_restrict_value","_createDOMInput","substituteText","_setState","_addListeners","_substituted","substitute","_createSurrogate","_destroySurrogate","placeholder","_update","text","_updateSurrogate","_dom_input","disabled","_disabled","maxLength","_max_length","length","setAttribute","restrict","_restrict_regex","regex","RegExp","toString","slice","charAt","value","htmlInput","dom_visible","_setDOMInputVisible","focus","blur","select","key","style","_updateFontMetrics","_last_renderer","options","remove","_destroyBoxCache","destroy","document","createElement","resize","type","spellcheck","once","_onAdded","bind","_onRemoved","addEventListener","_onInputInput","_onInputKeyUp","_onFocused","_onBlurred","e","_updateSubstitution","emit","keyCode","requestAnimationFrame","parent","body","appendChild","state","_updateBox","renderer","renderWebGL","_renderInternal","renderCanvas","render","_resolution","resolution","_canvas_bounds","_getCanvasBounds","_needsUpdate","_updateDOMInput","_needsNewBoxCache","_buildBoxCache","_box","removeChild","addChildAt","_surrogate","visible","top","left","transform","_pixiMatrixToCSS","_getDOMRelativeWorldTransform","opacity","worldAlpha","worldVisible","canvas_bounds","world_transform","worldTransform","clone","world_alpha","world_visible","test","setSelectionRange","_comparePixiMatrices","_compareClientRects","input_bounds","_getDOMInputBounds","width","height","_surrogate_hitbox","PIXI.Graphics","alpha","interactive","cursor","on","_onSurrogateFocus","addChild","_surrogate_mask","PIXI.Text","mask","padding","_deriveSurrogatePadding","_deriveSurrogateStyle","Math","max","apply","y","x","_deriveSurrogateText","_updateSurrogateHitbox","_updateSurrogateMask","bounds","clear","beginFill","drawRect","endFill","setTimeout","_ensureFocus","_hasFocus","PIXI.TextStyle","fill","color","letterSpacing","parseFloat","fontSize","wordWrap","wordWrapWidth","indent","textIndent","components","trim","split","paddingV","paddingH","map","component","font","toFontString","_font_metrics","PIXI.TextMetrics","measureFont","states","i","activeElement","rect","view","getBoundingClientRect","window","scrollX","scrollY","remove_after","org_transform","org_display","matrix","scale","m","a","b","c","d","tx","ty","join","m1","m2","r1","r2","default","focused","temp_styles","w","h","toLowerCase","stroke","lineStyle","rounded","drawRoundedRect","closePath","ButtonTexture","utils","EventEmitter","_options","_btn","Sprite","textureButton","_btnMode","anchor","set","onButtonDown","onButtonUp","onButtonOver","onButtonOut","button","isdown","texture","textureButtonDown","console","log","isOver","textureButtonOver"],"mappings":"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"}